[{"path":[]},{"path":"/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"CODE OF CONDUCT","text":"interest fostering open welcoming environment, contributors maintainers pledge make participation project community harassment-free experience everyone, regardless age, body size, disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"CODE OF CONDUCT","text":"Examples behavior contributes creating positive environment include: Using welcoming inclusive language respectful differing viewpoints experiences Gracefully accepting constructive criticism Focusing best community Showing empathy towards community members Examples unacceptable behavior participants include: use sexualized language imagery unwelcome sexual attention advances Trolling, insulting/derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical electronic address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"our-responsibilities","dir":"","previous_headings":"","what":"Our Responsibilities","title":"CODE OF CONDUCT","text":"Project maintainers responsible clarifying standards acceptable behavior expected take appropriate fair corrective action response instances unacceptable behavior. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, ban temporarily permanently contributor behaviors deem inappropriate, threatening, offensive, harmful.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"CODE OF CONDUCT","text":"Code Conduct applies within project spaces, also applies individual representing project community public spaces. Examples representing project community include using official project e-mail address, posting via official social media account, acting appointed representative online offline event. Representation project may defined clarified project maintainers.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"CODE OF CONDUCT","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported contacting project team [INSERT EMAIL ADDRESS]. complaints reviewed investigated result response deemed necessary appropriate circumstances. project team obligated maintain confidentiality regard reporter incident. details specific enforcement policies may posted separately. Project maintainers follow enforce Code Conduct good faith may face temporary permanent repercussions determined members project’s leadership.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"CODE OF CONDUCT","text":"Code Conduct adapted Contributor Covenant, version 1.4, available https://www.contributor-covenant.org/version/1/4/code--conduct.html","code":""},{"path":"/CONTRIBUTION.html","id":null,"dir":"","previous_headings":"","what":"TEAM CONTRIBUTION","title":"TEAM CONTRIBUTION","text":"First , thanks taking time contribute! following set guidelines contributing project. mostly just guidelines, rules. Feel free propose changes document pull request.","code":""},{"path":"/CONTRIBUTION.html","id":"table-of-content","dir":"","previous_headings":"","what":"Table of Content","title":"TEAM CONTRIBUTION","text":"Code conductHow Can Contribute?","code":""},{"path":"/CONTRIBUTION.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"TEAM CONTRIBUTION","text":"project everyone participating governed Code Conduct.","code":""},{"path":"/CONTRIBUTION.html","id":"how-can-i-contribute","dir":"","previous_headings":"","what":"How Can I Contribute?","title":"TEAM CONTRIBUTION","text":"section guides contribute internal external partner. Following guidelines helps maintainers community understand report, reproduce behavior, find related reports. Contributions bug reports tracked GitHub issues. Create issue . creating bug report, please include many details possible: Use clear descriptive title issue identify problem. Describe exact steps reproduce problem many details possible. Provide specific examples demonstrate steps. Include links files GitHub projects, copy/pasteable snippets, use examples. ’re providing snippets issue, use Markdown code blocks. Describe behavior observed following steps point exactly problem behavior. Explain behavior expected see instead . Include details configuration environment","code":""},{"path":"/CONTRIBUTION.html","id":"internal-contributors","dir":"","previous_headings":"How Can I Contribute?","what":"Internal contributors","title":"TEAM CONTRIBUTION","text":"Use issues list assgin tasks need accomplishment, issues linkled project milestone. Pull beginning work session, commit(messages meaningful) push end. Follow GitHub flow workflow, means creating branches feature fix, reviewed least one teammate.","code":""},{"path":"/CONTRIBUTION.html","id":"external-contributors","dir":"","previous_headings":"How Can I Contribute?","what":"External contributors","title":"TEAM CONTRIBUTION","text":"External contributors need open issues first explain ’d like help. accepted, fork repo submit pull request. contribution must follow Code Conduct.","code":""},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 wineclassify authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/wineclassify.html","id":"functions","dir":"Articles","previous_headings":"","what":"Functions","title":"wineclassify","text":"package includes following functions, can divided three parts: * 1. Data loading: data_load() * 2. Visualization: hist_plot(), corr_plot() * 3. Model building evaluating: model_build(), model_results()","code":""},{"path":"/articles/wineclassify.html","id":"example","dir":"Articles","previous_headings":"","what":"example","title":"wineclassify","text":"explain package works, use white wine data set stored repository Github perform following tasks.","code":""},{"path":"/articles/wineclassify.html","id":"initialization","dir":"Articles","previous_headings":"example","what":"Initialization","title":"wineclassify","text":"","code":"library(wineclassify) #> Registered S3 method overwritten by 'GGally': #>   method from    #>   +.gg   ggplot2"},{"path":[]},{"path":"/articles/wineclassify.html","id":"data_load-read-the-data-set","dir":"Articles","previous_headings":"example > 1. Data loading","what":"data_load(): Read the data set","title":"wineclassify","text":"function data_load() can help user download csv data set website turn data frame.","code":"library(wineclassify) ## basic example code d <- data_load(\"https://raw.githubusercontent.com/kashish1928/white_wine_dataset/main/winequality-white.csv\", \";\") #> Rows: 4898 Columns: 12 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \";\" #> dbl (12): fixed acidity, volatile acidity, citric acid, residual sugar, chlo... #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. d #> # A tibble: 4,898 × 12 #>    `fixed acidity` `volatile acidity` `citric acid` `residual sugar` chlorides #>              <dbl>              <dbl>         <dbl>            <dbl>     <dbl> #>  1             7                 0.27          0.36             20.7     0.045 #>  2             6.3               0.3           0.34              1.6     0.049 #>  3             8.1               0.28          0.4               6.9     0.05  #>  4             7.2               0.23          0.32              8.5     0.058 #>  5             7.2               0.23          0.32              8.5     0.058 #>  6             8.1               0.28          0.4               6.9     0.05  #>  7             6.2               0.32          0.16              7       0.045 #>  8             7                 0.27          0.36             20.7     0.045 #>  9             6.3               0.3           0.34              1.6     0.049 #> 10             8.1               0.22          0.43              1.5     0.044 #> # ℹ 4,888 more rows #> # ℹ 7 more variables: `free sulfur dioxide` <dbl>, #> #   `total sulfur dioxide` <dbl>, density <dbl>, pH <dbl>, sulphates <dbl>, #> #   alcohol <dbl>, quality <dbl>"},{"path":[]},{"path":"/articles/wineclassify.html","id":"hist_plot","dir":"Articles","previous_headings":"example > 2. Visualization","what":"hist_plot()","title":"wineclassify","text":"function hist_plot() plots histogram given data shows count category.","code":"library(wineclassify) hist_plot(d, \"quality\")"},{"path":"/articles/wineclassify.html","id":"corr_plot","dir":"Articles","previous_headings":"example > 2. Visualization","what":"corr_plot()","title":"wineclassify","text":"function corr_plot() plots correlation matrix heatmap variable pairs given data.","code":"library(wineclassify) ## basic example code corr_plot(mtcars)"},{"path":[]},{"path":"/articles/wineclassify.html","id":"model_build","dir":"Articles","previous_headings":"example > 3. Model building and evaluating","what":"model_build()","title":"wineclassify","text":"function model_build() builds KNN model using accurate K value.","code":"library(wineclassify) model_build(iris, recipes::recipe(Species ~., data = iris), \"Species\") #> ══ Workflow [trained] ══════════════════════════════════════════════════════════ #> Preprocessor: Recipe #> Model: nearest_neighbor() #>  #> ── Preprocessor ──────────────────────────────────────────────────────────────── #> 0 Recipe Steps #>  #> ── Model ─────────────────────────────────────────────────────────────────────── #>  #> Call: #> kknn::train.kknn(formula = ..y ~ ., data = data, ks = min_rows(13L,     data, 5), kernel = ~\"rectangular\") #>  #> Type of response variable: nominal #> Minimal misclassification: 0.03333333 #> Best kernel: rectangular #> Best k: 13"},{"path":"/articles/wineclassify.html","id":"model_results","dir":"Articles","previous_headings":"example > 3. Model building and evaluating","what":"model_results()","title":"wineclassify","text":"function model_results() creates confusion matrix fitted KNN model assess performance.","code":"library(wineclassify) split <- rsample::initial_split(iris, prop = 0.75, strata = Species) ex_test <- rsample::testing(split) ex_train <- rsample::training(split) ex_recipe <- recipes::recipe(Species ~., data = ex_train) ex_model <- model_build(ex_train, ex_recipe, \"Species\") model_results(ex_test, ex_model, \"Species\") #>             Truth #> Prediction   setosa versicolor virginica #>   setosa         13          0         0 #>   versicolor      0         11         0 #>   virginica       0          2        13"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Eric HUANG. Author, maintainer. Kashish Joshipura. Author. Peter Lee. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"HUANG E, Joshipura K, Lee P (2023). wineclassify: Create descriptive analysis classification model wine dataset. R package version 1.0.0.","code":"@Manual{,   title = {wineclassify: Create the descriptive analysis and classification model of the wine dataset},   author = {Eric HUANG and Kashish Joshipura and Peter Lee},   year = {2023},   note = {R package version 1.0.0}, }"},{"path":"/index.html","id":"wineclassify","dir":"","previous_headings":"","what":"Create the descriptive analysis and classification model of the wine dataset","title":"Create the descriptive analysis and classification model of the wine dataset","text":"goal wineclassify package aims use R help others classify different types quality wine based numerous amount variables. package also includes functions corr_plot, hist_plot functions allows user visualize analyze given data set. package similar tidyverse package package also uses ggplot2, tidymodels, recipes, workflows etc. wineclassify targets necessary packages used tidyverse thus making simplier straightforward use. goal wineclassify package help users conduct KNN classification project start. includes functions load dataset, visualize data histogram correlation matrix, build KNN model plot confusion matrix evaluate performance model.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Create the descriptive analysis and classification model of the wine dataset","text":"can install development version wineclassify GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"DSCI-310/dsci-310-group-02-pkg\") #> Downloading GitHub repo DSCI-310/dsci-310-group-02-pkg@HEAD #>  #> ── R CMD build ───────────────────────────────────────────────────────────────── #> * checking for file ‘/private/var/folders/cw/4ltklxm10r57c9rl1zj3nsbw0000gn/T/Rtmpx21hmG/remotesd0e02462bd4d/DSCI-310-dsci-310-group-02-pkg-e6c5aa3/DESCRIPTION’ ... OK #> * preparing ‘wineclassify’: #> * checking DESCRIPTION meta-information ... OK #> * checking for LF line-endings in source and make files and shell scripts #> * checking for empty or unneeded directories #> * building ‘wineclassify_0.0.0.9000.tar.gz’ #> Installing package into '/private/var/folders/cw/4ltklxm10r57c9rl1zj3nsbw0000gn/T/RtmpI67gg2/temp_libpatha1d964de6b' #> (as 'lib' is unspecified)"},{"path":"/index.html","id":"functions","dir":"","previous_headings":"","what":"Functions","title":"Create the descriptive analysis and classification model of the wine dataset","text":"data_load() hist_plot() corr_plot() model_build() model_results()","code":""},{"path":[]},{"path":"/index.html","id":"data_load","dir":"","previous_headings":"Usage","what":"data_load()","title":"Create the descriptive analysis and classification model of the wine dataset","text":"","code":"library(wineclassify) #> Registered S3 method overwritten by 'GGally': #>   method from    #>   +.gg   ggplot2 ## basic example code d <- data_load(\"https://raw.githubusercontent.com/kashish1928/white_wine_dataset/main/winequality-white.csv\", \";\") #> Rows: 4898 Columns: 12 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \";\" #> dbl (12): fixed acidity, volatile acidity, citric acid, residual sugar, chlo... #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. d #> # A tibble: 4,898 × 12 #>    `fixed acidity` `volatile acidity` `citric acid` `residual sugar` chlorides #>              <dbl>              <dbl>         <dbl>            <dbl>     <dbl> #>  1             7                 0.27          0.36             20.7     0.045 #>  2             6.3               0.3           0.34              1.6     0.049 #>  3             8.1               0.28          0.4               6.9     0.05  #>  4             7.2               0.23          0.32              8.5     0.058 #>  5             7.2               0.23          0.32              8.5     0.058 #>  6             8.1               0.28          0.4               6.9     0.05  #>  7             6.2               0.32          0.16              7       0.045 #>  8             7                 0.27          0.36             20.7     0.045 #>  9             6.3               0.3           0.34              1.6     0.049 #> 10             8.1               0.22          0.43              1.5     0.044 #> # ℹ 4,888 more rows #> # ℹ 7 more variables: `free sulfur dioxide` <dbl>, #> #   `total sulfur dioxide` <dbl>, density <dbl>, pH <dbl>, sulphates <dbl>, #> #   alcohol <dbl>, quality <dbl>"},{"path":"/index.html","id":"hist_plot","dir":"","previous_headings":"Usage","what":"hist_plot()","title":"Create the descriptive analysis and classification model of the wine dataset","text":"","code":"library(wineclassify) hist_plot(d, \"quality\")"},{"path":"/index.html","id":"corr_plot","dir":"","previous_headings":"Usage","what":"corr_plot()","title":"Create the descriptive analysis and classification model of the wine dataset","text":"","code":"library(wineclassify) ## basic example code corr_plot(mtcars)"},{"path":"/index.html","id":"model_build","dir":"","previous_headings":"Usage","what":"model_build()","title":"Create the descriptive analysis and classification model of the wine dataset","text":"","code":"library(wineclassify) model_build(iris, recipes::recipe(Species ~., data = iris), \"Species\") #> ══ Workflow [trained] ══════════════════════════════════════════════════════════ #> Preprocessor: Recipe #> Model: nearest_neighbor() #>  #> ── Preprocessor ──────────────────────────────────────────────────────────────── #> 0 Recipe Steps #>  #> ── Model ─────────────────────────────────────────────────────────────────────── #>  #> Call: #> kknn::train.kknn(formula = ..y ~ ., data = data, ks = min_rows(13L,     data, 5), kernel = ~\"rectangular\") #>  #> Type of response variable: nominal #> Minimal misclassification: 0.03333333 #> Best kernel: rectangular #> Best k: 13"},{"path":"/index.html","id":"model_results","dir":"","previous_headings":"Usage","what":"model_results()","title":"Create the descriptive analysis and classification model of the wine dataset","text":"detailed information use wineclassify function, please refer Vignette Docs","code":"library(wineclassify) split <- rsample::initial_split(iris, prop = 0.75, strata = Species) ex_test <- rsample::testing(split) ex_train <- rsample::training(split) ex_recipe <- recipes::recipe(Species ~., data = ex_train) ex_model <- model_build(ex_train, ex_recipe, \"Species\") model_results(ex_test, ex_model, \"Species\") #>             Truth #> Prediction   setosa versicolor virginica #>   setosa         13          0         0 #>   versicolor      0         12         0 #>   virginica       0          1        13"},{"path":"/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Create the descriptive analysis and classification model of the wine dataset","text":"welcome appreciate contributions wineclassify function. Please read contribute package.","code":""},{"path":"/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Create the descriptive analysis and classification model of the wine dataset","text":"package uses MIT open source license.","code":""},{"path":"/reference/corr_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a correlation matrix plot for variable pairs — corr_plot","title":"Create a correlation matrix plot for variable pairs — corr_plot","text":"function takes variable pairs data create correlation matrix heatmap correlation values","code":""},{"path":"/reference/corr_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a correlation matrix plot for variable pairs — corr_plot","text":"","code":"corr_plot(data)"},{"path":"/reference/corr_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a correlation matrix plot for variable pairs — corr_plot","text":"data dataframe","code":""},{"path":"/reference/corr_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a correlation matrix plot for variable pairs — corr_plot","text":"correlation matrix variable pairs data","code":""},{"path":"/reference/corr_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a correlation matrix plot for variable pairs — corr_plot","text":"","code":"corr_plot(mtcars)"},{"path":"/reference/data_load.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the Data frame — data_load","title":"Create the Data frame — data_load","text":"Read data set URL return data frame","code":""},{"path":"/reference/data_load.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the Data frame — data_load","text":"","code":"data_load(url, sperator = \";\")"},{"path":"/reference/data_load.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create the Data frame — data_load","text":"url URL (string) download data sperator separator (string) used file","code":""},{"path":"/reference/data_load.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create the Data frame — data_load","text":"data frame separated columns","code":""},{"path":"/reference/data_load.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create the Data frame — data_load","text":"","code":"data_load( \"https://raw.githubusercontent.com/kashish1928/white_wine_dataset/main/winequality-white.csv\", \";\") #> Rows: 4898 Columns: 12 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \";\" #> dbl (12): fixed acidity, volatile acidity, citric acid, residual sugar, chlo... #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> # A tibble: 4,898 × 12 #>    `fixed acidity` `volatile acidity` `citric acid` `residual sugar` chlorides #>              <dbl>              <dbl>         <dbl>            <dbl>     <dbl> #>  1             7                 0.27          0.36             20.7     0.045 #>  2             6.3               0.3           0.34              1.6     0.049 #>  3             8.1               0.28          0.4               6.9     0.05  #>  4             7.2               0.23          0.32              8.5     0.058 #>  5             7.2               0.23          0.32              8.5     0.058 #>  6             8.1               0.28          0.4               6.9     0.05  #>  7             6.2               0.32          0.16              7       0.045 #>  8             7                 0.27          0.36             20.7     0.045 #>  9             6.3               0.3           0.34              1.6     0.049 #> 10             8.1               0.22          0.43              1.5     0.044 #> # ℹ 4,888 more rows #> # ℹ 7 more variables: `free sulfur dioxide` <dbl>, #> #   `total sulfur dioxide` <dbl>, density <dbl>, pH <dbl>, sulphates <dbl>, #> #   alcohol <dbl>, quality <dbl>"},{"path":"/reference/hist_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a histogram for the count of each categorical variable — hist_plot","title":"Plot a histogram for the count of each categorical variable — hist_plot","text":"Plot histogram count categorical variable","code":""},{"path":"/reference/hist_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a histogram for the count of each categorical variable — hist_plot","text":"","code":"hist_plot(data, grp_var)"},{"path":"/reference/hist_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a histogram for the count of each categorical variable — hist_plot","text":"data dataframe includes grp_var variable grp_var categorical column used grouping variables","code":""},{"path":"/reference/hist_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a histogram for the count of each categorical variable — hist_plot","text":"histogram shows count categorical variable","code":""},{"path":"/reference/hist_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a histogram for the count of each categorical variable — hist_plot","text":"","code":"hist_plot(iris, \"Species\")"},{"path":"/reference/model_build.html","id":null,"dir":"Reference","previous_headings":"","what":"KNN Model Building — model_build","title":"KNN Model Building — model_build","text":"Build KNN model using accurate K value","code":""},{"path":"/reference/model_build.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"KNN Model Building — model_build","text":"","code":"model_build(train_data, recipe, col)"},{"path":"/reference/model_build.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"KNN Model Building — model_build","text":"train_data training data model recipe recipe data build model col column name response variable","code":""},{"path":"/reference/model_build.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"KNN Model Building — model_build","text":"fitted KNN model using accurate K value","code":""},{"path":"/reference/model_build.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"KNN Model Building — model_build","text":"","code":"model_build(iris, recipes::recipe(Species ~., data = iris), \"Species\") #> ══ Workflow [trained] ══════════════════════════════════════════════════════════ #> Preprocessor: Recipe #> Model: nearest_neighbor() #>  #> ── Preprocessor ──────────────────────────────────────────────────────────────── #> 0 Recipe Steps #>  #> ── Model ─────────────────────────────────────────────────────────────────────── #>  #> Call: #> kknn::train.kknn(formula = ..y ~ ., data = data, ks = min_rows(13L,     data, 5), kernel = ~\"rectangular\") #>  #> Type of response variable: nominal #> Minimal misclassification: 0.03333333 #> Best kernel: rectangular #> Best k: 13"},{"path":"/reference/model_results.html","id":null,"dir":"Reference","previous_headings":"","what":"KNN model confusion matrix — model_results","title":"KNN model confusion matrix — model_results","text":"Create confusion matrix fitted KNN model assess performance","code":""},{"path":"/reference/model_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"KNN model confusion matrix — model_results","text":"","code":"model_results(test_data, model, col)"},{"path":"/reference/model_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"KNN model confusion matrix — model_results","text":"test_data testing data model model fitted KNN model col column name response variable","code":""},{"path":"/reference/model_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"KNN model confusion matrix — model_results","text":"confusion matrix model","code":""},{"path":"/reference/model_results.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"KNN model confusion matrix — model_results","text":"","code":"split <- rsample::initial_split(iris, prop = 0.75, strata = Species) ex_test <- rsample::testing(split) ex_train <- rsample::training(split) ex_recipe <- recipes::recipe(Species ~., data = ex_train) ex_model <- model_build(ex_train, ex_recipe, \"Species\") model_results(ex_test, ex_model, \"Species\") #>             Truth #> Prediction   setosa versicolor virginica #>   setosa         13          0         0 #>   versicolor      0         13         0 #>   virginica       0          0        13"},{"path":"/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"/reference/wineclassify-package.html","id":null,"dir":"Reference","previous_headings":"","what":"wineclassify: Create the descriptive analysis and classification model of the wine dataset — wineclassify-package","title":"wineclassify: Create the descriptive analysis and classification model of the wine dataset — wineclassify-package","text":"package includes functions can conduct descriptive analysis creating histogram count categorical variables correlation matrix. also provides users create KNN classification model assess model's performance.","code":""},{"path":"/reference/wineclassify-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"wineclassify: Create the descriptive analysis and classification model of the wine dataset — wineclassify-package","text":"Maintainer: Eric HUANG erichsy@student.ubc.ca Authors: Kashish Joshipura kashishjoshipura@gmail.com Peter Lee leepeter718@gmail.com","code":""}]
